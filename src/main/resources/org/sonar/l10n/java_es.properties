rule.squid.ArchitecturalConstraint.name=Restricción de arquitectura
rule.squid.ArchitecturalConstraint.param.fromClasses=Opcional. Si esta propiedad está definida, todas las clases deben cumplir la restricción. Ej: **.web.**
rule.squid.ArchitecturalConstraint.param.toClasses=Obligatorio. Ej: java.util.Vector, java.util.Hashtable, java.util.Enumeration
rule.squid.AvoidBreakOutsideSwitch.name=Evita el uso de la instrucción 'break' fuera de un bloque 'switch'
rule.squid.AvoidContinueStatement.name=Evita el uso de la instrucción 'continue'
rule.squid.CallToDeprecatedMethod.name=Evita el uso de métodos obsoletos (deprecated)
rule.squid.ClassCyclomaticComplexity.name=Evita clases demasiado complejas
rule.squid.ClassCyclomaticComplexity.param.max=Complejidad máxima permitida.
rule.squid.EmptyFile.name=Fichero vacío
rule.squid.MaximumInheritanceDepth.name=Evita árboles de herencia muy profundos
rule.squid.MaximumInheritanceDepth.param.max=Profundidad máxima de los árboles de herencia.
rule.squid.MethodCyclomaticComplexity.name=Evita métodos demasiado complejos
rule.squid.MethodCyclomaticComplexity.param.max=Complejidad máxima permitida.
rule.squid.NoSonar.name=Evita el uso de la marca //NOSONAR
rule.squid.UndocumentedApi.name=API no documentada
rule.squid.UndocumentedApi.param.forClasses=Opcional. Si esta propiedad está definida, todas las clases deben cumplir la restricción. Ej: **.api.**
rule.squid.UnusedPrivateMethod.name=Método privado no utilizado
rule.squid.UnusedProtectedMethod.name=Método protegido no utilizado
rule.squid.CommentedOutCodeLine.name=Evita líneas de código comentadas
rule.squid.CycleBetweenPackages.name=Evita ciclos entre paquetes java
rule.squid.CallToFileDeleteOnExitMethod.name=No utilices File#deleteOnExit()
rule.squid.MaximumLackOfCohesionOfMethods.name=Evita un LCOM4 muy alto
rule.squid.MaximumLackOfCohesionOfMethods.param.max=Máximo LCOM4 permitido.
rule.squid.ParsingError.name=Error en el parseador Java
rule.squid.Snippet.name=Evita el uso del anti-patrón dado
rule.squid.Snippet.param.doExample1=El código refactorizado del primer ejemplo
rule.squid.Snippet.param.dontExample1=Primer ejemplo de código del anti-patrón a detectar
rule.squid.Snippet.param.dontExample2=(Opcional) Segundo ejemplo de código del anti-patrón a detectar
rule.squid.XPath.name=Regla XPath
rule.squid.XPath.param.message=El mensaje de la evidencia
rule.squid.XPath.param.xpathQuery=La consulta XPath

#------------------------------------------------------------------------------
#
# SQUID 1.5
#
#------------------------------------------------------------------------------

rule.squid.AssignmentInSubExpressionCheck.name=Las asignaciones no deben realizarse dentro de sub-expresiones
rule.squid.ClassVariableVisibilityCheck.name=Los atributos de clase no deben tener visibilidad pública
rule.squid.EmptyStatementUsageCheck.name=Las sentencias vacías deben eliminarse
rule.squid.ForLoopCounterChangedCheck.name=Los contadores en los bucles no deben asignarse dentro del cuerpo del bucle
rule.squid.HiddenFieldCheck.name=Las variables locales no deben enmarscarar a los atributos de la clase
rule.squid.IndentationCheck.name=El código fuente debe estar indentado correctamente
rule.squid.IndentationCheck.param.indentationLevel=Número de espacios de un nivel de indentación
rule.squid.LabelsShouldNotBeUsedCheck.name=No deben utilizarse etiquetas
rule.squid.LeftCurlyBraceEndLineCheck.name=Las llaves izquierdas deben localizarse en el final de las líneas de código
rule.squid.LeftCurlyBraceStartLineCheck.name=Las llaves izquierdas deben localizarse en el principio de las líneas de código
rule.squid.LowerCaseLongSuffixCheck.name=El sufijo "L" de Long debe ser siempre en mayúsculas
rule.squid.MissingDeprecatedCheck.name=Los elementos obsoletos deberían estar indicados tanto con anotaciones como con su etiqueta en JavaDoc
rule.squid.ModifiersOrderCheck.name=Los modificadores deben declararse en el orden correcto
rule.squid.ObjectFinalizeCheck.name=El método Object.finalize() nunca debería invocarse
rule.squid.ObjectFinalizeOverridenCallsSuperFinalizeCheck.name=super.finalize() debería invocarse al final de la implementación del método Object.finalize()
rule.squid.ObjectFinalizeOverridenCheck.name=El método Object.finalize() nunca debería ser sobreescrito
rule.squid.RedundantThrowsDeclarationCheck.name=Las declaraciones de Throws no deberían ser redundantes
rule.squid.RightCurlyBraceDifferentLineAsNextBlockCheck.name=La llave de cierre y la siguiente palabra reservada "else", "catch" y "finally" deberían localizarse en dos líneas diferentes
rule.squid.RightCurlyBraceSameLineAsNextBlockCheck.name=La llave de cierre y la siguiente palabra reservada "else", "catch" y "finally" debería localizarse en la misma línea
rule.squid.RightCurlyBraceStartLineCheck.name=La llave de cierre debe localizarse al principio de las líneas de código 
rule.squid.S00100.name=Los nombres de método deben cumplir con la convención de nombres
rule.squid.S00100.param.format=Expresión regular utilizada para comprobar los nombres de los métodos.
rule.squid.S00101.name=Los nombres de clase deben cumplir con la convención de nombres
rule.squid.S00101.param.format=Expresión regular utilizada para comprobar los nombres de las clases.
rule.squid.S00103.name=Las líneas de código no deben ser demasiado largas
rule.squid.S00103.param.maximumLineLength=Longitud máxima autorizada de línea.
rule.squid.S00104.name=Los ficheros no deben tener demasiadas líneas
rule.squid.S00104.param.maximumFileLocThreshold=Líneas máximas autorizdas en un fichero
rule.squid.S00105.name=No se deben utilizar caracteres de tabulación
rule.squid.S00107.name=Los métodos no deben tener demasiados parámetros
rule.squid.S00107.param.maximumMethodParameters=El máximo número de parámetos autorizado.
rule.squid.S00108.name=Los bloques anidades de código no deben dejarse vacíos
rule.squid.S00112.name=Las excepciones genéricas de Error, RuntimeException, Throwable y Exception nunca deberían propagarse
rule.squid.S00113.name=Los ficheros deben contener una línea vacía al final
rule.squid.S00114.name=Los nombres de interface deben cumplir con la convención de nombres
rule.squid.S00114.param.format=Expresión regular utilizada contra la que comprobar los nombres de interface.
rule.squid.S00115.name=Los nombres de constante deben cumplir con la convención de nombres
rule.squid.S00115.param.format=Expresión regular utilizada contra la que comprobar los nombres de constante.
rule.squid.S00116.name=Los nombres de atributos deben cumplir con la convención de nombres
rule.squid.S00116.param.format=Expresión regular utilizada contra la que comprobar los nombres de atributos.
rule.squid.S00117.name=Las variables locales y parámetros de métodos deben cumplir con la convención de nombres 
rule.squid.S00117.param.format=Expresión regular utilizada contra la que comprobar los nombres.
rule.squid.S00118.name=Los nombres de clases abstractas deben cumplir con la convención de nombres
rule.squid.S00118.param.format=Expresión regular utilizada contra la que comprobar los nombres de clases abstractas.
rule.squid.S00119.name=Los nombres de tipo de parámetros deben cumplir con la convención de nombres
rule.squid.S00119.param.format=Expresión regular utilizada contra la que comprobar los tipos.
rule.squid.S00120.name=Los nombres de paquete deben cumplir con la convención de nombres
rule.squid.S00120.param.format=Expresión regular utilizada contra la que comprobar los nombres de paquetes.
rule.squid.S00121.name=Las sentencias if/else/for/while/do deben utilizar llaves siempre
rule.squid.S00122.name=Las sentencias deben estar en líneas separadas
rule.squid.S106.name=System.out y System.err no deben utilizarse como loggers
rule.squid.S1066.name=Las sentencias "if" que se pueden plegar deben juntarse
rule.squid.S1067.name=Las expresiones no deberían ser muy complejas
rule.squid.S1067.param.max=Número másximo de operadores condicionales permitidos en una expresión
rule.squid.S1118.name=Las clases de utilidad no deberían tener un constructor público
rule.squid.S1125.name=Las expresiones booleanas no deberían compararse con true o false
rule.squid.S1126.name=El retorno de expresiones booleanas no debe envolverse en una sentencia if-then-else
rule.squid.S1132.name=Los literales de cadenas de caracteres deben utilizarse en el lado izquierdo en una comparación de igualdad 
rule.squid.S1133.name=El código obsoleto debería ser eliminado eventualmente
rule.squid.S1134.name=Las etiquetas FIXME deberían manejarse
rule.squid.S1135.name=Las etiquetas TODO deberían manejarse
rule.squid.S1141.name=Los bloques try-catch no deberían anidarse
rule.squid.S1142.name=Los métodos no deberían contener demasiadas sentencias de retorno
rule.squid.S1142.param.max=Número máximo de sentencias de retorno por método
rule.squid.S1143.name=Las sentencias de retorno no deberían aparecer en bloques finally
rule.squid.S1145.name=La sentencia condicional if no debería evaluarse siempre a "true" o "false"
rule.squid.S1147.name=System.exit(...) y Runtime.getRuntime().exit(...) nunca deberían invocarse
rule.squid.S1148.name=Throwable.printStackTrace(...) nunca debería invocarse
rule.squid.S1149.name=Las clases sincronizadas Vector, Hashtable y StringBuffer no deberían utilizarse
rule.squid.S1150.name=Enumeration no debería implementarse
rule.squid.S1151.name=Los switch case no deberían tener demasiadas líneas
rule.squid.S1151.param.max=Número máximo de líneas permitidas en un switch case
rule.squid.S1153.name=String.valueOf() no debería añadirse a un String
rule.squid.S1155.name=Collection.isEmpty() debería utilizarse para comprobar el vacío
rule.squid.S1157.name=Las comparaciones de cadenas insensibles a mayúsculas deberían realizarse sin una transformación intermedia de mayúsculas o minúsculas 
rule.squid.S1158.name=Las clases primitivas no deberían instanciarse solo para realizar una conversión a un String
rule.squid.S1160.name=Los métodos públicos deberían propagar como mínimo una checked exception
rule.squid.S1163.name=Las excepciones no deberían propagarse desde dentro de bloques finally
rule.squid.S1165.name=Las clases de excepciones deben ser inmutables
rule.squid.S1166.name=Los manejadores de excepciones deben proveer de un contexto y preservar la excepción original
rule.squid.S1168.name=Arrays y colecciones vacíos deberían de retornarse en lugar de null
rule.squid.S1170.name=Las constantes deberían declararse "final static" en lugar de solo "final"
rule.squid.S1171.name=No deben utilizarse inicializadores de clase no estáticos
rule.squid.S1174.name=Object.finalize() debe permanecer protected (en lugar de public) cuando se sobreescribe
rule.squid.S1175.name=Object.finalize() no debe sobrecargarse (añadiendo parámetros al método)
rule.squid.S1181.name=Las clases Throwable y Error no deben de capturarse
rule.squid.S1182.name=super.clone() debe ser invocado cuando se sobreescribe Object.clone()
rule.squid.S1185.name=Sobreescribir métodos debería añadir más operaciones que una simple llamada al mismo método de la clase padre
rule.squid.S1186.name=Los métodos no deberían estar vacíos
rule.squid.S1188.name=Las clases anónimas no deberían tener demasiadas líneas
rule.squid.S1188.param.max=Número máximo de líneas permitido en una clase anónima
rule.squid.S1190.name="enum" nunca debería utilizarse como nombre
rule.squid.S1191.name=Las clases de los paquetes "com.sun.*" y "sun.*" nunca deberían utilizarse 
rule.squid.S1192.name=Los literales de cadenas de caracteres nunca deberían duplicarse
rule.squid.S1193.name=Los tipos de excepción no deberían comprobarse utilizando "instanceof" en los bloques catch
rule.squid.S1194.name="java.lang.Error" no debería extenderse
rule.squid.S1195.name=Los designadores de Array "[]" nunca deberían ubicarse despues del tipo en la signatura del método
rule.squid.S1197.name=Los designadores de Array "[]" deberían  estar en el tipo, no en la variable
rule.squid.S1199.name=Bloques de código anidado no deberían utilizarse
rule.squid.S1200.name=Las clases no deberían acoplarse con demasiadas clases (Principio de Responsabilidad Única o Simple)
rule.squid.S1200.param.max=Número máximo de clases sobre las que se le permite depender a una simple clase
rule.squid.S1201.name=Los métodos que se llamen "equals" deben sobreescribir Object.equals(Object)
rule.squid.S1206.name="equals(Object obj)" y "hashCode()" deben sobreescribirse a pares
rule.squid.S1210.name="equals(Object obj)" debe sobreescribirse conjuntamente con el método "compareTo(T obj)"
rule.squid.S1214.name=Las constantes no deberían estar definidas en las interfaces
rule.squid.S1215.name=La ejecución del recolector de basura solo debería provocarse desde la JVM
rule.squid.S1217.name=Thread.run() y Runnable.run() no deben invocarse directamente
rule.squid.S1219.name=Las sentencias "switch" no deben contener etiquetas que no sean case
rule.squid.S1220.name=El paquete por defecto sin nombre no debe utilizarse
rule.squid.S1221.name=Los métodos no deben nombrarse "hashcode"
rule.squid.S1223.name=Los métodos que no sean constructores no deben tener el mismo nombre que la clase en la que están 
rule.squid.S1226.name=Los parámetros del método, las excepciones capturadas y las variables foreach no deben reasignarse
rule.squid.S1231.name=Los miembros en la declaración de una interfaz o clase deben aparecer en un orden predefinido
rule.squid.S128.name=Los casos de un switch deben terminar con una sentencia break no condicional
rule.squid.S1301.name=Las sentencias "switch" deben tener al menos 3 casos
rule.squid.S1310.name=El filtro en los comentarios NOPMD no debe utilizarse
rule.squid.S1312.name=Los Loggers deben ser "private static final" y deben compartir una convención de nombres
rule.squid.S1312.param.format=Expresión regular contra la que comprobar los nombres de logger.
rule.squid.S1313.name=Las direcciones IP no deben estar directamente escritas en el código
rule.squid.S1314.name=Valores octales no deberían utilizarse
rule.squid.S1315.name=El filtro en los comentarios CHECKSTYLE:OFF no debe utilizarse
rule.squid.S1318.name="object == null" debería utilizarse en lugar de "object.equals(null)"
rule.squid.S1319.name=Las interfaces de las colecciones de Java como "List" deben de manterse en lugar de implementaciones específicas como "LinkedList"
rule.squid.S134.name=Las sentencias de control de flujo "if", "for", "while" y "switch" no deberían anidarse demasiado
rule.squid.S134.param.max=Profundidad máxima permitida para anidamiento en sentencias if/for/while/switch
rule.squid.S135.name=Los bucles no deben contener más de un único "break" o "continue"
rule.squid.S138.name=Los métodos no deberían tener demasiadas líneas
rule.squid.S138.param.max=Número máximo de líneas permitido en un método
rule.squid.StringEqualityComparisonCheck.name=Los Strings deben de compararse con utilizando equals()
rule.squid.SwitchLastCaseIsDefaultCheck.name=Las sentencias switch deben finalizar con un caso por defecto
rule.squid.TrailingCommentCheck.name=Los comentarios no deberían estar localizados al final de las líneas de código
rule.squid.TrailingCommentCheck.param.legalCommentPattern=Patrón permitido como comentario al final de línea.
rule.squid.UselessImportCheck.name=Las importaciones sin utilizar deberían ser eliminadas
rule.squid.UselessParenthesesCheck.name=Los paréntesis sin utilizar alrededor de las expresiones deberían eliminarse para prevenir cualquier malentendido

#------------------------------------------------------------------------------
#
# SQUID 2.0
#
#------------------------------------------------------------------------------

rule.squid.S1068.name=Los métodos privados que no se utilizan deben eliminarse
rule.squid.S1317.name=No debes instanciar un StringBuilder o StringBuffer con un único caracter
rule.squid.S1444.name=Los campos "public static" deberían ser siempre constantes
rule.squid.S1451.name=El copyright y las cabeceras de licencia deberían estar definidas en todos los ficheros de los fuentes
rule.squid.S1451.param.headerFormat=Formato esperado para copyright y cabeceras de licencia (texto plano)
rule.squid.S1452.name=El uso de tipos genéricos con comodines no debería utilizarse en parámetros de retorno
rule.squid.S1481.name=Las variables locales que no se utilizan deben eliminarse
rule.squid.S881.name=Los operadores de incremento (++) y decremento (--) no deben mezclarse con otros operadores en una expresión

#------------------------------------------------------------------------------
#
# SQUID 2.1
#
#------------------------------------------------------------------------------

rule.squid.S1191.param.exclude=Lista separada por comas de los paquetes de Sun que deben ser ignorados por esta regla. Por ejemplo: com.sun.jna,sun.misc 
rule.squid.S1488.name=Las variables no deben ser declaradas e inmediatamente retornadas o propagadas
rule.squid.S1596.name=Collections.emptyList(),emptyMap() y emptySet() son preferibles en lugar de Collections.EMPTY_LIST, EMPTY_MAP y EMPTY_SET
rule.squid.S1602.name=Lambdas que contengan solo una sentencia no deberían anidarla en un bloque 
rule.squid.S1611.name=Los paréntesis en un parámetro de entrada simple para una función lambda deberían eliminarse cuando se infiere su tipo 

#------------------------------------------------------------------------------
#
# SQUID 2.2
#
#------------------------------------------------------------------------------

rule.squid.S1166.param.exceptions=Lista de excepciones que no deben comprobarse
rule.squid.S1192.param.threshold=Número de veces que un literal puede repetirse antes de suponer una evidencia
rule.squid.S1213.name=Los miembros de la declaración de una interfaz o una clase deben aparecer en un orden pre-definido
rule.squid.S1604.name=Las clases anónimas internas que contengan solo un método deberían convertirse en lambdas 
rule.squid.S1610.name=Las clases abstractas sin campos deberían convertirse a interfaces

#------------------------------------------------------------------------------
#
# SQUID 2.3
#
#------------------------------------------------------------------------------

rule.squid.S109.name=No deben utilizarse números mágicos
rule.squid.S1172.name=Los parámetros de los métodos que no se usan deberían ser eliminados
rule.squid.S1609.name=La anoticación @FunctionalInterface debería utilizarse para marcar Single Abstract Method interfaces
rule.squid.S1643.name=Strings no deberían concatenarse utilizando '+' dentro de un bucle
rule.squid.S1694.name=Una clase abstracta tiene que tener tanto métodos abstractos como concretos
rule.squid.S1696.name="NullPointerException" no debería capturarse
rule.squid.S1698.name=Los objetos deben compararse con "equals()"
rule.squid.S1700.name=Un campo no debe duplicar el nombre de la clase que lo contiene
rule.squid.S1701.name=Campos no deben duplicar los nombres de métodos

#------------------------------------------------------------------------------
#
# JAVA 2.4
#
#------------------------------------------------------------------------------
rule.squid.S1294.name=El método Array.equals(Object obj) nunca debería utilizarse
rule.squid.S1598.name=La declaración del paquete debería corresponderse con el directorio del fichero fuente
rule.squid.S1612.name=Sustituye lambdas con referencias a métodos cuando sea posible
rule.squid.S1656.name=Las Variablesno deberían auto-asignarse 
rule.squid.S1695.name=Una "NullPointerException" no debería lanzarse explícitamente 
rule.squid.S1697.name=Deberías utilizar lógica "Short-Circuit" en las condiciones para prevenir referencias a null
rule.squid.S1710.name=Las anotaciones repetidas no deben encapsularse
rule.squid.S1862.name=Las condiciones en sentencias "if/else if" relacionadas no deberían duplicarse